/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-23 12:57:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user_005flog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.MemberBean;
import member.MemberDBBean;

public final class user_005fmyPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.MemberDBBean");
    _jspx_imports_classes.add("member.MemberBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String id = (String) session.getAttribute("id");

	MemberDBBean manager = MemberDBBean.getInstance();
	MemberBean mb = manager.getMember(id);

      out.write(" \r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("    <title>user_myPage</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,100;0,200;0,300;0,400;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/simplebar.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/feather.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/daterangepicker.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/app-light.css\" id=\"lightTheme\">\r\n");
      out.write("  </head>\r\n");
      out.write("  <style>\r\n");
      out.write("    .form-group1 {width: 50%; margin-bottom: 15px;}\r\n");
      out.write("    .form-row1 {margin-right: -5px;  }\r\n");
      out.write("    .form-row1 ul {list-style: none; display: flex; justify-content: flex;}\r\n");
      out.write("    .form-row1 ul li{margin-right: 3%;}\r\n");
      out.write("    .form-row1 ul li:first-child {list-style: none; width: 20%; }\r\n");
      out.write("    .row.mb-4{ margin-bottom: 5px;}\r\n");
      out.write("    input#sample4_postcode{width: 50%; display: inline-block; margin-right: 20px; margin-bottom: 10px;}\r\n");
      out.write("    input#sample4_roadAddress {margin-bottom: 10px;}\r\n");
      out.write("    #juso{height: 28px; font-size: 12px; background-color: #1B68FF; border-color: #1B68FF; border-radius: 3px; color: white;\r\n");
      out.write("    font-family: sans-serif;};\r\n");
      out.write("  </style>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"script.js\" charset=\"utf-8\"></script>\r\n");
      out.write("  <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\">\r\n");
      out.write("  </script>\r\n");
      out.write("<script>\r\n");
      out.write("    //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\r\n");
      out.write("    function sample4_execDaumPostcode() {\r\n");
      out.write("        new daum.Postcode({\r\n");
      out.write("            oncomplete: function(data) {\r\n");
      out.write("                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                    extraRoadAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                if(extraRoadAddr !== ''){\r\n");
      out.write("                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                document.getElementById('sample4_postcode').value = data.zonecode;\r\n");
      out.write("                document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n");
      out.write("                document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress;\r\n");
      out.write("                \r\n");
      out.write("                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("                if(roadAddr !== ''){\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr;\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("                if(data.autoRoadAddress) {\r\n");
      out.write("                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("                    guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("                    guideTextBox.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("                } else if(data.autoJibunAddress) {\r\n");
      out.write("                    var expJibunAddr = data.autoJibunAddress;\r\n");
      out.write("                    guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';\r\n");
      out.write("                    guideTextBox.style.display = 'block';\r\n");
      out.write("                } else {\r\n");
      out.write("                    guideTextBox.innerHTML = '';\r\n");
      out.write("                    guideTextBox.style.display = 'none';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }).open();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("  <body class=\"light \">\r\n");
      out.write("    <div class=\"wrapper vh-100\">\r\n");
      out.write("      <div class=\"row align-items-center h-100\">\r\n");
      out.write("        <form class=\"col-lg-6 col-md-8 col-10 mx-auto\" name=\"upd_frm\" method=\"post\" action=\"userUpdateOk.jsp\">\r\n");
      out.write("          <div class=\"mx-auto text-center my-4\">\r\n");
      out.write("            <a class=\"navbar-brand mx-auto mt-2 flex-fill text-center\" href=\"./index.html\">\r\n");
      out.write("              <svg version=\"1.1\" id=\"logo\" class=\"navbar-brand-img brand-md\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 120 120\" xml:space=\"preserve\">\r\n");
      out.write("                <g>\r\n");
      out.write("                  <polygon class=\"st0\" points=\"78,105 15,105 24,87 87,87 	\" />\r\n");
      out.write("                  <polygon class=\"st0\" points=\"96,69 33,69 42,51 105,51 	\" />\r\n");
      out.write("                  <polygon class=\"st0\" points=\"78,33 15,33 24,15 87,15 	\" />\r\n");
      out.write("                </g>\r\n");
      out.write("              </svg>\r\n");
      out.write("            </a>\r\n");
      out.write("            <h2 class=\"my-3\">마이 페이지</h2>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-group1\">\r\n");
      out.write("            <p class=\"idArea\"><b>");
      out.print( id );
      out.write("</b> 님의 개인정보</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          <div class=\"form-row\">\r\n");
      out.write("            <div class=\"form-group col-md-6\">\r\n");
      out.write("              <label for=\"firstname\">Name</label>\r\n");
      out.write("              <input type=\"text\" id=\"firstname\" class=\"form-control\" name=\"user_name\" value=\"");
      out.print( mb.getUser_name() );
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-row1\">\r\n");
      out.write("            <label for=\"phone1\">Phone</label>\r\n");
      out.write("            <label for=\"phone2\"></label>\r\n");
      out.write("            <label for=\"phone3\"></label>\r\n");
      out.write("              <ul>\r\n");
      out.write("                <li>\r\n");
      out.write("                  <input value=\"");
      out.print( mb.getUser_phone1() );
      out.write("\" type=\"text\" id=\"phone1\" class=\"form-control\" name =\"user_phone1\" maxlength=\"4\">\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                  <input value=\"");
      out.print( mb.getUser_phone2() );
      out.write("\" type=\"text\" id=\"phone2\" class=\"form-control\" name=\"user_phone2\" maxlength=\"4\">\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                  <input value=\"");
      out.print( mb.getUser_phone3() );
      out.write("\" type=\"text\" id=\"phone3\" class=\"form-control\" name=\"user_phone3\" maxlength=\"4\">\r\n");
      out.write("                </li>\r\n");
      out.write("              </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-group\">\r\n");
      out.write("            <label for=\"inputEmail4\">Email</label>\r\n");
      out.write("            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" name=\"user_email\" value=\"");
      out.print( mb.getUser_email() );
      out.write("\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-row1\">\r\n");
      out.write("            <label for=\"sample4_postcode\">Address</label>\r\n");
      out.write("            <br>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" name=\"user_pcode\" id=\"sample4_postcode\" placeholder=\"우편번호\" value=\"");
      out.print( mb.getUser_pcode() );
      out.write("\">\r\n");
      out.write("            <input id=\"juso\" type=\"button\" onclick=\"sample4_execDaumPostcode()\" value=\"우편번호 찾기\">\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" name=\"user_raddr\" id=\"sample4_roadAddress\" placeholder=\"도로명주소\" value=\"");
      out.print( mb.getUser_raddr());
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"user_jibun\" id=\"sample4_jibunAddress\" placeholder=\"지번주소\" value=\"");
      out.print( mb.getUser_jibun() );
      out.write("\">\r\n");
      out.write("            <span id=\"guide\" style=\"color:#999;display:none\"></span>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" name=\"user_detailaddr\" id=\"sample4_detailAddress\" placeholder=\"상세주소\" value=\"");
      out.print( mb.getUser_detailaddr());
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" id=\"sample4_extraAddress\" placeholder=\"참고항목\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <hr class=\"my-4\">\r\n");
      out.write("          <div class=\"row mb-4\">\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("                <label for=\"inputPassword5\">Password</label>\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" id=\"inputPassword5\" name=\"user_pwd\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <hr class=\"my-4\">\r\n");
      out.write("          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">수정</button>\r\n");
      out.write("          <p class=\"mt-5 mb-3 text-muted text-center\">© 2022</p>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"../js/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"../js/moment.min.js\"></script>\r\n");
      out.write("    <script src=\"../js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"../js/simplebar.min.js\"></script>\r\n");
      out.write("    <script src='../js/daterangepicker.js'></script>\r\n");
      out.write("    <script src='../js/jquery.stickOnScroll.js'></script>\r\n");
      out.write("    <script src=\"../js/tinycolor-min.js\"></script>\r\n");
      out.write("    <script src=\"../js/config.js\"></script>\r\n");
      out.write("    <script src=\"../js/apps.js\"></script>\r\n");
      out.write("    <!-- Global site tag (gtag.js) - Google Analytics -->\r\n");
      out.write("    <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-56159088-1\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      window.dataLayer = window.dataLayer || [];\r\n");
      out.write("\r\n");
      out.write("      function gtag()\r\n");
      out.write("      {\r\n");
      out.write("        dataLayer.push(arguments);\r\n");
      out.write("      }\r\n");
      out.write("      gtag('js', new Date());\r\n");
      out.write("      gtag('config', 'UA-56159088-1');\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
